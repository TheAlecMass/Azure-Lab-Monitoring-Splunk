{
    "dataSources": {
        "ds_AfXb9vDw": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon sourcetype=\"WIN:Perfmon:Disk\" counter=\"% Free Space\" instance=\"C:\"\r\n| eval Percent_Disk_Used=round((100 - Value), 2)\r\n| fields priv_ip_address, pub_ip_address, Percent_Disk_Used\r\n| eval OS_Type=\"Windows\"\r\n| search priv_ip_address!=\"priv_ip_address_placeholder\"\r\n| search pub_ip_address!=\"pub_ip_address_placeholder\"\r\n\r\n| append\r\n  [ search index=sysmon sourcetype=\"WIN:Perfmon:Memory\" counter=\"% Committed Bytes In Use\"\r\n  | eval Percent_Memory_Used=round(Value, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Memory_Used\r\n  | eval OS_Type=\"Windows\" ]\r\n  | search priv_ip_address!=\"priv_ip_address_placeholder\"\r\n  | search pub_ip_address!=\"pub_ip_address_placeholder\"\r\n  \r\n| append\r\n  [ search index=sysmon sourcetype=\"WIN:Perfmon:CPU\" counter=\"% Processor Time\" instance=_Total\r\n  | eval Percent_Processor_Time=round(Value, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Processor_Time\r\n  | eval OS_Type=\"Windows\" ]\r\n  | search priv_ip_address!=\"priv_ip_address_placeholder\"\r\n  | search pub_ip_address!=\"pub_ip_address_placeholder\"\r\n\r\n| append\r\n  [ search index=sysmon sourcetype=\"LTS:Perfmon:Memory\"\r\n  | eval Percent_Memory_Used=round((mem_used / (mem_used + mem_free)) * 100, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Memory_Used\r\n  | eval OS_Type=\"Linux\" ]\r\n\r\n| append\r\n  [ search index=sysmon sourcetype=\"LTS:Perfmon:Disk\"\r\n  | eval Percent_Disk_Used=round((disk_usage / (disk_usage + disk_free)) * 100, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Disk_Used\r\n  | eval OS_Type=\"Linux\" ]\r\n  \r\n| append\r\n  [ search index=sysmon sourcetype=\"LTS:Perfmon:CPU\"\r\n  | eval Percent_Processor_Time=round(cpu_usage, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Processor_Time\r\n  | eval OS_Type=\"Linux\" ]\r\n\r\n| stats latest(Percent_Memory_Used) as Percent_Memory_Used, latest(Percent_Disk_Used) as Percent_Disk_Used latest(Percent_Processor_Time) as Percent_Processor_Time by priv_ip_address, pub_ip_address, OS_Type\r\n| table priv_ip_address, pub_ip_address, OS_Type, Percent_Memory_Used, Percent_Disk_Used, Percent_Processor_Time",
                "queryParameters": {}
            },
            "name": "Lab Performance Table"
        },
        "ds_fYzZONrF": {
            "type": "ds.search",
            "options": {
                "query": "index=*\r\nsourcetype = \"mscs:storage:blob\"\r\nsource = \"*\"\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval timestamp=strptime(timestamp, \"%Y-%m-%dT%H:%M:%S.%3NZ\")\r\n| sort 0 - timestamp\r\n| dedup private_ip sortby - timestamp\r\n\r\n| eval lab_status=if(state=\"Running\" OR state=\"Starting\", \"Active\", \"Deployed\")\r\n| stats count(eval(lab_status=\"Deployed\")) as Deployed_labs, count(eval(lab_status=\"Active\")) as Active_labs",
                "enableSmartSources": true,
                "queryParameters": {}
            },
            "name": "Total_Labs"
        },
        "ds_RER7WBLl": {
            "type": "ds.search",
            "options": {
                "query": "(index=sysmon sourcetype=WIN:Perfmon:Memory counter=\"% Committed Bytes In Use\")\r\n| eval Percent_Memory_Used_Windows=round(Value, 2)\r\n| fields _time, priv_ip_address, pub_ip_address, Percent_Memory_Used_Windows\r\n| rename Percent_Memory_Used_Windows as Percent_Memory_Used\r\n| eval OS_Type=\"Windows\"\r\n| search priv_ip_address!=\"priv_ip_address_placeholder\"\r\n| search pub_ip_address!=\"pub_ip_address_placeholder\"\r\n\r\n| append\r\n    [ search (index=sysmon sourcetype=LTS:Perfmon:Memory)\r\n    | eval Percent_Memory_Used_Linux=round((mem_used / (mem_used + mem_free)) * 100, 2)\r\n    | table _time, priv_ip_address, pub_ip_address, Percent_Memory_Used_Linux\r\n    | rename Percent_Memory_Used_Linux as Percent_Memory_Used\r\n    | eval OS_Type=\"Linux\" ]\r\n\r\n| stats latest(Percent_Memory_Used) as Percent_Memory_Used by _time, priv_ip_address, OS_Type\r\n| timechart span=1h avg(Percent_Memory_Used) by OS_Type\r\n"
            },
            "name": "AVG RAM by OS"
        },
        "ds_rRLehNVD": {
            "type": "ds.search",
            "options": {
                "query": "(index=sysmon sourcetype=WIN:Perfmon:Memory counter=\"% Committed Bytes In Use\")\r\n| eval OS_Type=\"Windows\"\r\n| fields priv_ip_address, OS_Type\r\n\r\n| append\r\n    [ search (index=sysmon sourcetype=LTS:Perfmon:Memory)\r\n    | eval OS_Type=\"Linux\"\r\n    | fields priv_ip_address, OS_Type ]\r\n\r\n| stats dc(priv_ip_address) as Count by OS_Type"
            },
            "name": "Search OS"
        },
        "ds_5yUNYaBx": {
            "type": "ds.search",
            "options": {
                "query": "(index=sysmon sourcetype=\"WIN:Perfmon:CPU\" counter=\"% Processor Time\" instance=_Total)\r\n  | eval Percent_Processor_Time=round(Value, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Processor_Time\r\n  | eval OS_Type=\"Windows\"\r\n  | search priv_ip_address!=\"priv_ip_address_placeholder\"\r\n  | search pub_ip_address!=\"pub_ip_address_placeholder\"\r\n  \r\n| append\r\n  [ search index=sysmon sourcetype=\"LTS:Perfmon:CPU\"\r\n  | eval Percent_Processor_Time=round(cpu_usage, 2)\r\n  | fields priv_ip_address, pub_ip_address, Percent_Processor_Time\r\n  | eval OS_Type=\"Linux\" ]\r\n\r\n| stats latest(Percent_Processor_Time) as Percent_Processor_Time by _time, priv_ip_address, OS_Type\r\n| timechart span=1h avg(Percent_Processor_Time) by OS_Type"
            },
            "name": "AVG Disk Usage by OS"
        },
        "ds_s9fDF9gB": {
            "type": "ds.search",
            "options": {
                "query": "index=* sourcetype = \"mscs:storage:blob:json\" source = \"vm-logs:$lab_ip$\"\n| stats latest(properties.state)"
            },
            "name": "State"
        },
        "ds_uc49lU2n": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:System OR sourcetype=\"mscs:storage:blob\") counter=\"System Up Time\"\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| eval Uptime_Hours = if(state==\"Stopped\", 0, round(Value / 3600, 2))\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=30min latest(Uptime_Hours) by priv_ip"
            },
            "name": "WIN Uptime last 24 hours"
        },
        "ds_sHfQ6lly": {
            "type": "ds.search",
            "options": {
                "query": "index=* sourcetype=\"mscs:storage:blob:vms\"\r\n| where source=\"$lab_ip$\"\r\n| stats latest(properties.state) as latest_state by source\r\n| append [\r\n    search index=* (sourcetype=WIN:perfmon:CPU OR sourcetype=\"mscs:storage:blob:vms\") counter=\"% Processor Time\"\r\n    | where priv_ip_address=\"$lab_ip$\"\r\n    | eval cpu_usage=round(Value, 2)\r\n    | stats latest(cpu_usage) as cpu_usage by priv_ip_address\r\n    | rename priv_ip_address as source\r\n]\r\n| stats latest(latest_state) as latest_state, latest(cpu_usage) as cpu_usage by source\r\n| eval cpu_usage = if(latest_state == \"Stopped\", \"*Stopped*\", cpu_usage)\r\n| rename source as cpu"
            },
            "name": "CPU Usage Percent v2"
        },
        "ds_gQBoatok": {
            "type": "ds.search",
            "options": {
                "query": "index=* sourcetype=\"mscs:storage:blob:vms\"\r\n| where source=\"10.2.252.14\"\r\n| stats latest(properties.state) as latest_state by source\r\n| append [\r\n    search index=* (sourcetype=WIN:perfmon:Memory OR sourcetype=\"mscs:storage:blob:vms\") counter=\"System Up Time\"\r\n    | where priv_ip_address=\"10.2.252.14\"\r\n    | eval mem_usage=round(Value, 2)\r\n    | stats latest(mem_usage) as mem_usage by priv_ip_address\r\n    | rename priv_ip_address as source\r\n]\r\n| stats latest(latest_state) as latest_state, latest(mem_usage) as mem_usage by source\r\n| eval mem_usage = if(latest_state == \"Stopped\", \"*Stopped*\", mem_usage)"
            },
            "name": "RAM usage percent v2"
        },
        "ds_uTYXIVte": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:CPU OR sourcetype=\"mscs:storage:blob\") counter=\"% Processor Time\"\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| eval cpu_usage = if(state==\"Stopped\", 0, round(Value, 2))\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=15min latest(cpu_usage) by priv_ip"
            },
            "name": "CPU last 24 hours v2"
        },
        "ds_EbrK365S": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Memory OR sourcetype=\"mscs:storage:blob\") counter=\"% Committed Bytes In Use\"\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| eval mem_usage = if(state==\"Stopped\", 0, round(Value, 2))\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=15min latest(mem_usage) by priv_ip"
            },
            "name": "RAM Usage v2"
        },
        "ds_HMlBu2xP": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Network OR sourcetype=\"mscs:storage:blob\")\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| eval rx_kbps = case(counter==\"Bytes Received/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| eval tx_kbps = case(counter==\"Bytes Sent/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| timechart span=15m latest(rx_kbps) as recieved_kbps, latest(tx_kbps) as sent_kbps by priv_ip"
            },
            "name": "Network Performance v2"
        },
        "ds_vrb8NsHz": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Disk_*\" OR source=\"disk_usage.log_*\"\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\n| rex \"freespace-c:-Value=(?<freespace_c_value>\\d+\\.\\d+)?\"\n| rex \"disk_usage=(?<disk_usage>\\d+)?\"\n| rex \"disk_total=(?<disk_total>\\d+)?\"\n| eval spaceused = if(isnotnull(freespace_c_value), 100 - freespace_c_value, null())\n| eval Percent_Disk_Used = if(isnotnull(disk_usage) AND isnotnull(disk_total), round((disk_usage / disk_total) * 100, 2), null())\n| dedup priv_ip_address\n| where priv_ip_address = \"$lab_ip$\"\n| eval display_value = coalesce(Percent_Disk_Used, spaceused)\n| table priv_ip_address, display_value\n| eval display_value = if(state=\"Stopped\", 0, display_value)\n| table display_value\n",
                "queryParameters": {}
            },
            "name": "Disk usage percent"
        },
        "ds_TjwafVPp_ds_s9fDF9gB": {
            "type": "ds.search",
            "options": {
                "query": "index=* \r\nsourcetype=\"mscs:storage:blob\"\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath path=\"value{}.properties.connectionProfile.privateIpAddress\" output=ip \r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| where priv_ip = \"10.2.252.6\"\r\n| spath path=\"value{}.properties.state\" output=state \r\n| stats latest(state) as last_state by priv_ip\r\n\r\n| appendcols [\r\n    search index=* (sourcetype=WIN:perfmon:System OR sourcetype=\"mscs:storage:blob\") counter=\"System Up Time\"\r\n    | spath path=\"value{}\" output=resourceGroup\r\n    | mvexpand resourceGroup\r\n    | spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n    | spath input=resourceGroup path=properties.state output=state\r\n    | spath input=resourceGroup path=properties.timestamp output=timestamp\r\n    | eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n    | eval Uptime_Hours = round(Value / 3600, 2)\r\n    | where priv_ip = \"10.2.252.6\"\r\n    | stats latest(Uptime_Hours) as latest_uptime by priv_ip\r\n]\r\n| eval latest_uptime = if(last_state == \"Stopped\", \"*Stopped*\", latest_uptime)\r\n| table priv_ip, last_state, latest_uptime"
            },
            "name": "WIN Lab Uptime v2 copy 1"
        },
        "ds_g3PhmE1o_ds_EbrK365S": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Memory OR sourcetype=\"mscs:storage:blob\") counter=\"% Committed Bytes In Use\"\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| eval mem_usage = if(state==\"Stopped\", 0, round(Value, 2))\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=15min latest(mem_usage) by priv_ip"
            },
            "name": "RAM Usage v2 copy 1"
        },
        "ds_6aXXAnYH": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon sourcetype=WIN:Perfmon:Disk counter=\"% Free Space\" instance=\"C:\"\r\n\r\n| eval disk_usage = round(100 - Value, 2)\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| eval priv_ip_address= \"disk\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=15min latest(disk_usage) by priv_ip_address"
            },
            "name": "Disk usage 24hr"
        },
        "ds_5kH5TpJc_ds_HMlBu2xP": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Network OR sourcetype=\"mscs:storage:blob\")\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| eval rx_kbps = case(counter==\"Bytes Received/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| eval tx_kbps = case(counter==\"Bytes Sent/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| timechart span=15m latest(rx_kbps) as recieved_kbps, latest(tx_kbps) as sent_kbps by priv_ip"
            },
            "name": "Network Performance v2 copy 1"
        },
        "ds_NviJl0fc_ds_HMlBu2xP": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Network OR sourcetype=\"mscs:storage:blob\")\r\n| spath path=\"value{}\" output=resourceGroup\r\n| mvexpand resourceGroup\r\n| spath input=resourceGroup path=properties.connectionProfile.privateIpAddress output=private_ip\r\n| spath input=resourceGroup path=properties.state output=state\r\n| spath input=resourceGroup path=properties.timestamp output=timestamp\r\n| eval priv_ip=coalesce(priv_ip_address, private_ip)\r\n| where priv_ip = \"$lab_ip$\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| eval rx_kbps = case(counter==\"Bytes Received/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| eval tx_kbps = case(counter==\"Bytes Sent/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| timechart span=15m latest(rx_kbps) as recieved_kbps, latest(tx_kbps) as sent_kbps by priv_ip"
            },
            "name": "Network Performance v2 copy 2"
        },
        "ds_gX5YbCn5": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-System_*\" OR source=\"uptime.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"systemuptime-Value=(?<system_uptime>\\d+\\.\\d+)\"\r\n| rex \"uptime=(?<uptime>\\d+\\.\\d+)?\"\r\n| eval uptime_value = coalesce(system_uptime, uptime)\r\n| eval Uptime_Hours = round(uptime_value / 3600, 2)\r\n| dedup priv_ip_address\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| table priv_ip_address, Uptime_Hours\r\n\r\n| join type=left priv_ip_address\r\n    [ search index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"vm-logs:*\"\r\n      | spath path=\"properties.connectionProfile.privateIpAddress\" output=priv_ip_address\r\n      | spath path=\"properties.state\" output=state\r\n      | dedup priv_ip_address\r\n      | stats latest(state) as state by priv_ip_address\r\n      | eval state=if(state==\"Stopped\", \"Stopped\", \"Running\")\r\n      | table priv_ip_address, state ]\r\n\r\n| eval Uptime_Hours = if(state==\"Stopped\", 0, Uptime_Hours)\r\n| table priv_ip_address, Uptime_Hours, state\r\n"
            },
            "name": "WIN Lab Uptime v3"
        },
        "ds_BbrrfMwr": {
            "type": "ds.search",
            "options": {
                "query": "index=* sourcetype=\"mscs:storage:blob:vms\"\r\n| where source=\"$lab_ip$\"\r\n| stats latest(properties.state) as latest_state by source\r\n| append [\r\n    search index=* (sourcetype=WIN:perfmon:Memory OR sourcetype=\"mscs:storage:blob:vms\") counter=\"% Committed Bytes In Use\"\r\n    | where priv_ip_address=\"$lab_ip$\"\r\n    | eval mem_usage=round(Value, 2)\r\n    | stats latest(mem_usage) as mem_usage by priv_ip_address\r\n    | rename priv_ip_address as source\r\n]\r\n| stats latest(latest_state) as latest_state, latest(mem_usage) as mem_usage by source\r\n| eval mem_usage = if(latest_state == \"Stopped\", \"*Stopped*\", mem_usage)\r\n| rename source as memory"
            },
            "name": "RAM usage percent v3"
        },
        "ds_zWtTMXe8": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-System_*\" OR source=\"uptime.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"systemuptime-Value=(?<system_uptime>\\d+\\.\\d+)\"\r\n| rex \"uptime=(?<uptime>\\d+\\.\\d+)?\"\r\n| eval uptime_value = coalesce(system_uptime, uptime)\r\n| eval Uptime_Hours = round(uptime_value / 3600, 2)\r\n| eval label = \"uptime\"\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| timechart span=30m latest(Uptime_Hours) by label",
                "queryParameters": {
                    "earliest": "-24h@h",
                    "latest": "now"
                }
            },
            "name": "WIN uptime last 24 hours v3"
        },
        "ds_HekAqiot": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Network OR sourcetype=\"mscs:storage:blob\")\r\n| eval priv_ip=coalesce(priv_ip_address, source)\r\n| eval rx_kbps = case(counter==\"Bytes Received/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| eval tx_kbps = case(counter==\"Bytes Sent/sec\", if(state==\"Stopped\", 0, round(Value * 8 / 1000, 2))) \r\n| where priv_ip = \"$lab_ip$\"\r\n| eval priv_ip= \"network\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=15m latest(rx_kbps) as recieved_kbps, latest(tx_kbps) as sent_kbps by priv_ip"
            },
            "name": "Network Performance v3"
        },
        "ds_11ZiLVVA": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:CPU OR sourcetype=\"mscs:storage:blob:vms\") counter=\"% Processor Time\"\r\n| eval priv_ip=coalesce(priv_ip_address, source)\r\n| eval cpu_usage = if(state==\"Stopped\", 0, round(Value, 2))\r\n| where priv_ip = \"$lab_ip$\"\r\n| eval priv_ip= \"cpu\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=30min latest(cpu_usage) by priv_ip"
            },
            "name": "CPU last 24 hours v3"
        },
        "ds_DCGEJsK6": {
            "type": "ds.search",
            "options": {
                "query": "index=sysmon (sourcetype=WIN:perfmon:Disk OR sourcetype=\"mscs:storage:blob:vms\") counter=\"% Free Space\" instance=\"C:\"\r\n| eval priv_ip=coalesce(priv_ip_address, source)\r\n| eval disk_usage = round(100 - Value, 2)\r\n| where priv_ip = \"$lab_ip$\"\r\n| eval priv_ip= \"memory\"\r\n| where _time >= relative_time(now(), \"-24h\")\r\n| timechart span=30min latest(disk_usage) by priv_ip"
            },
            "name": "RAM percent last 24 Hours"
        },
        "ds_iYxDtkWX": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Memory_*\" OR source=\"mem_usage.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"committedbytesinuse-Value=(?<committedbytesinuse>\\d+)\"\r\n| rex \"mem_total=(?<mem_total>\\d+)\"\r\n| rex \"mem_used=(?<mem_used>\\d+)\"\r\n| eval mem_used_percent = if(isnotnull(mem_used) AND isnotnull(mem_total), round((mem_used / mem_total) * 100, 2), null())\r\n| dedup priv_ip_address\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| eval display_value = coalesce(mem_used_percent, committedbytesinuse)\r\n| table priv_ip_address, display_value\r\n\r\n| join type=left priv_ip_address\r\n    [ search index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"vm-logs:*\"\r\n      | spath path=\"properties.connectionProfile.privateIpAddress\" output=priv_ip_address\r\n      | spath path=\"properties.state\" output=state\r\n      | dedup priv_ip_address\r\n      | stats latest(state) as state by priv_ip_address\r\n      | eval state=if(state==\"Stopped\", \"Stopped\", \"Running\")\r\n      | table priv_ip_address, state ]\r\n\r\n| eval display_value = if(state==\"Stopped\", 0, display_value)\r\n| table priv_ip_address, display_value, state\r\n"
            },
            "name": "RAM usage percent v4"
        },
        "ds_VtUfwPDO": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-CPU_*\" OR source=\"cpu_usage.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"processortime-_total-Value=(?<processor_time_total>\\d+\\.\\d+)\"\r\n| rex \"cpu_usage=(?<cpu_usage>\\d+\\.\\d+)?\"\r\n| eval processor_time_total = round(processor_time_total, 2)\r\n| dedup priv_ip_address\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| eval display_value = coalesce(cpu_usage, processor_time_total, 0)\r\n| table priv_ip_address, display_value\r\n\r\n| join type=left priv_ip_address\r\n    [ search index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"vm-logs:*\"\r\n      | spath path=\"properties.connectionProfile.privateIpAddress\" output=priv_ip_address\r\n      | spath path=\"properties.state\" output=state\r\n      | dedup priv_ip_address\r\n      | stats latest(state) as state by priv_ip_address\r\n      | eval state=if(state==\"Stopped\", \"Stopped\", \"Running\")\r\n      | table priv_ip_address, state ]\r\n\r\n| eval display_value = if(state==\"Stopped\", 0, display_value)\r\n| table priv_ip_address, display_value, state\r\n"
            },
            "name": "CPU usage percent v4"
        },
        "ds_BYSSH2EI": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Network_*\" OR source=\"network_tp.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"bytestotalsec-Value=(?<WIN_bytestotalsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"bytessentsec-Value=(?<WIN_bytessentsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"bytesreceivedsec-Value=(?<WIN_bytesreceivedsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"rx\\s+(?<LTS_rx_kbps>\\d+\\.\\d+)\\s+kbit/s\"\r\n| rex \"tx\\s+(?<LTS_tx_kbps>\\d+\\.\\d+)\\s+kbit/s\"\r\n| eval WIN_Kbps_total = if(isnotnull(WIN_bytestotalsec_Value), round(WIN_bytestotalsec_Value * 8 / 1024, 2), null())\r\n| eval WIN_Kbps_sent = if(isnotnull(WIN_bytessentsec_Value), round(WIN_bytessentsec_Value * 8 / 1024, 2), null())\r\n| eval WIN_Kbps_received = if(isnotnull(WIN_bytesreceivedsec_Value), round(WIN_bytesreceivedsec_Value * 8 / 1024, 2), null())\r\n| eval LTS_Kbps_total = round((if(isnotnull(LTS_rx_kbps), LTS_rx_kbps, 0) + if(isnotnull(LTS_tx_kbps), LTS_tx_kbps, 0)), 2)\r\n| eval LTS_Kbps_sent = if(isnotnull(LTS_tx_kbps), round(LTS_tx_kbps, 2), null())\r\n| eval LTS_Kbps_received = if(isnotnull(LTS_rx_kbps), round(LTS_rx_kbps, 2), null())\r\n| eval total_sent = coalesce(WIN_Kbps_sent, LTS_Kbps_sent)\r\n| eval total_received = coalesce(WIN_Kbps_received, LTS_Kbps_received)\r\n| eval label = \"kbps\"\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| table _time, priv_ip_address, total_sent, total_received\r\n| timechart span=15m latest(total_received) as received_kbps, latest(total_sent) as sent_kbps"
            },
            "name": "network perf v4"
        },
        "ds_XTPU6tFB": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-CPU_*\" OR source=\"cpu_usage.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"processortime-_total-Value=(?<processor_time_total>\\d+\\.\\d+)\"\r\n| rex \"cpu_usage=(?<cpu_usage>\\d+\\.\\d+)?\"\r\n| eval processor_time_total = round(processor_time_total, 2)\r\n| eval display_value = coalesce(cpu_usage, processor_time_total, 0)\r\n| eval label = \"cpu_usage\"\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| timechart span=15m latest(display_value) as display_value by label"
            },
            "name": "cpu last 24 hours v4"
        },
        "ds_q3xphEwT": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Memory_*\" OR source=\"mem_usage.log_*\"\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\n| rex \"committedbytesinuse-Value=(?<committedbytesinuse>\\d+)\"\n| rex \"mem_total=(?<mem_total>\\d+)\"\n| rex \"mem_used=(?<mem_used>\\d+)\"\n| eval mem_used_percent = if(isnotnull(mem_used) AND isnotnull(mem_total), round((mem_used / mem_total) * 100, 2), null())\n| eval label = \"ram_usage\"\n| where priv_ip_address = \"$lab_ip$\"\n| eval display_value = coalesce(mem_used_percent, committedbytesinuse)\n| timechart span=30m latest(display_value) as mem_usage by label"
            },
            "name": "Memory usage last 24hr v4"
        },
        "ds_d52WuaxM": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Disk_*\" OR source=\"disk_usage.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"freespace-c:-Value=(?<freespace_c_value>\\d+\\.\\d+)?\"\r\n| rex \"disk_usage=(?<disk_usage>\\d+)?\"\r\n| rex \"disk_total=(?<disk_total>\\d+)?\"\r\n| eval spaceused = if(isnotnull(freespace_c_value), 100 - freespace_c_value, null())\r\n| eval Percent_Disk_Used = if(isnotnull(disk_usage) AND isnotnull(disk_total), round((disk_usage / disk_total) * 100, 2), null())\r\n| eval label = \"disk_use\"\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| eval display_value = coalesce(Percent_Disk_Used, spaceused)\r\n| timechart span=30m latest(display_value) as disk_usage by label"
            },
            "name": "Disk usage 24hr v4"
        },
        "ds_pHYn65zb": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Network_*\" OR source=\"network_tp.log_*\"\r\n| rex \"bytestotalsec-Value=(?<WIN_bytestotalsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"bytessentsec-Value=(?<WIN_bytessentsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"bytesreceivedsec-Value=(?<WIN_bytesreceivedsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"rx\\s+(?<LTS_rx_kbps>\\d+\\.\\d+)\\s+kbit/s\"\r\n| rex \"tx\\s+(?<LTS_tx_kbps>\\d+\\.\\d+)\\s+kbit/s\"\r\n| eval WIN_Kbps_total = if(isnotnull(WIN_bytestotalsec_Value), round(WIN_bytestotalsec_Value / 1024, 2), null())\r\n| eval WIN_Kbps_sent = if(isnotnull(WIN_bytessentsec_Value), round(WIN_bytessentsec_Value / 1024, 2), null())\r\n| eval WIN_Kbps_received = if(isnotnull(WIN_bytesreceivedsec_Value), round(WIN_bytesreceivedsec_Value / 1024, 2), null())\r\n| eval LTS_Kbps_total = round((if(isnotnull(LTS_rx_kbps), LTS_rx_kbps, 0) + if(isnotnull(LTS_tx_kbps), LTS_tx_kbps, 0)), 2)\r\n| eval LTS_Kbps_sent = if(isnotnull(LTS_tx_kbps), round(LTS_tx_kbps, 2), null())\r\n| eval LTS_Kbps_received = if(isnotnull(LTS_rx_kbps), round(LTS_rx_kbps, 2), null())\r\n| eval total_sent = coalesce(WIN_Kbps_sent, LTS_Kbps_sent)\r\n| eval total_received = coalesce(WIN_Kbps_received, LTS_Kbps_received)\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| table _time, priv_ip_address, total_sent, total_receieved\r\n| timechart span=15m latest(total_received) as received_kbps"
            },
            "name": "Network Performance Received"
        },
        "ds_9isHLx44": {
            "type": "ds.search",
            "options": {
                "query": "index=\"service_azure_labs\" sourcetype=\"mscs:storage:blob:json\" source=\"win-logs-Network_*\" OR source=\"network_tp.log_*\"\r\n| rex field=_raw \"priv_ip_address=(?<priv_ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)\"\r\n| rex \"bytestotalsec-Value=(?<WIN_bytestotalsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"bytessentsec-Value=(?<WIN_bytessentsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"bytesreceivedsec-Value=(?<WIN_bytesreceivedsec_Value>\\d+\\.\\d+)?\"\r\n| rex \"rx\\s+(?<LTS_rx_kbps>\\d+\\.\\d+)\\s+kbit/s\"\r\n| rex \"tx\\s+(?<LTS_tx_kbps>\\d+\\.\\d+)\\s+kbit/s\"\r\n| eval WIN_Kbps_total = if(isnotnull(WIN_bytestotalsec_Value), round(WIN_bytestotalsec_Value * 8 / 1024, 2), null())\r\n| eval WIN_Kbps_sent = if(isnotnull(WIN_bytessentsec_Value), round(WIN_bytessentsec_Value * 8 / 1024, 2), null())\r\n| eval WIN_Kbps_received = if(isnotnull(WIN_bytesreceivedsec_Value), round(WIN_bytesreceivedsec_Value * 8 / 1024, 2), null())\r\n| eval LTS_Kbps_total = round((if(isnotnull(LTS_rx_kbps), LTS_rx_kbps, 0) + if(isnotnull(LTS_tx_kbps), LTS_tx_kbps, 0)), 2)\r\n| eval LTS_Kbps_sent = if(isnotnull(LTS_tx_kbps), round(LTS_tx_kbps, 2), null())\r\n| eval LTS_Kbps_received = if(isnotnull(LTS_rx_kbps), round(LTS_rx_kbps, 2), null())\r\n| eval total_sent = coalesce(WIN_Kbps_sent, LTS_Kbps_sent)\r\n| eval total_received = coalesce(WIN_Kbps_received, LTS_Kbps_received)\r\n| eval label = \"kbps\"\r\n| where priv_ip_address = \"$lab_ip$\"\r\n| table _time, priv_ip_address, total_sent, total_received\r\n| timechart span=15m latest(total_received) as received_kbps, latest(total_sent) as sent_kbps"
            },
            "name": "network perf v5"
        }
    },
    "visualizations": {
        "viz_0KALIAzA": {
            "type": "splunk.singlevalue",
            "title": "Lab State",
            "dataSources": {
                "primary": "ds_s9fDF9gB"
            },
            "options": {
                "unit": "",
                "numberPrecision": 2,
                "trendFontSize": 1,
                "trendDisplay": "off",
                "sparklineDisplay": "off",
                "backgroundColor": "> majorValue | matchValue(backgroundColorEditorConfig)",
                "majorValue": "> sparklineValues | lastPoint()",
                "trendValue": "> sparklineValues | delta(-2)",
                "sparklineValues": "> primary | seriesByName('latest(properties.state)')"
            },
            "context": {
                "backgroundColorEditorConfig": [
                    {
                        "match": "Running",
                        "value": "#118832"
                    },
                    {
                        "match": "Stopped",
                        "value": "#d41f1f"
                    },
                    {
                        "match": "Stopping",
                        "value": "#d97a0d"
                    },
                    {
                        "match": "Starting",
                        "value": "#9d9f0d"
                    }
                ]
            }
        },
        "viz_RGYbhgOf": {
            "type": "splunk.singlevalue",
            "title": "CPU Usage %",
            "dataSources": {
                "primary": "ds_VtUfwPDO"
            },
            "options": {
                "unit": "%",
                "numberPrecision": 2,
                "backgroundColor": "> majorValue | rangeValue(backgroundColorEditorConfig)",
                "majorValue": "> sparklineValues | lastPoint()",
                "trendValue": "> sparklineValues | delta(-2)",
                "sparklineValues": "> primary | seriesByName('display_value')",
                "trendDisplay": "percent"
            },
            "context": {
                "backgroundColorEditorConfig": [
                    {
                        "value": "#118832",
                        "to": 50
                    },
                    {
                        "value": "#CBA700",
                        "from": 50,
                        "to": 80
                    },
                    {
                        "value": "#D41F1F",
                        "from": 80
                    }
                ]
            },
            "hideWhenNoData": true
        },
        "viz_mT2Y1GeM": {
            "type": "splunk.singlevalue",
            "title": "RAM Usage %",
            "dataSources": {
                "primary": "ds_iYxDtkWX"
            },
            "options": {
                "unit": "%",
                "numberPrecision": 2,
                "backgroundColor": "> majorValue | rangeValue(backgroundColorEditorConfig)",
                "majorValue": "> sparklineValues | lastPoint()",
                "trendValue": "> sparklineValues | delta(-2)",
                "sparklineValues": "> primary | seriesByName('display_value')"
            },
            "context": {
                "backgroundColorEditorConfig": [
                    {
                        "value": "#118832",
                        "to": 60
                    },
                    {
                        "value": "#CBA700",
                        "from": 60,
                        "to": 80
                    },
                    {
                        "value": "#D41F1F",
                        "from": 80
                    }
                ]
            },
            "hideWhenNoData": true
        },
        "viz_PFrx7mQd": {
            "type": "splunk.line",
            "title": "Uptime (Last 24 hours)",
            "dataSources": {
                "primary": "ds_zWtTMXe8"
            },
            "options": {
                "x": "> primary | seriesByName('_time')",
                "y": "> primary | frameBySeriesNames('uptime')",
                "showYAxisWithZero": true,
                "yAxisMin": 0,
                "showXMajorGridLines": true,
                "yAxisMax": 4.5,
                "xAxisLineVisibility": "show",
                "xAxisTitleText": "Time of Day",
                "xAxisLabelVisibility": "show",
                "xAxisMajorTickSize": 4,
                "seriesColors": [
                    "#53a051",
                    "#009CEB",
                    "#00CDAF",
                    "#ffffff",
                    "#FF677B",
                    "#CB2196",
                    "#813193",
                    "#0051B5",
                    "#008C80",
                    "#53a051",
                    "#FFA476",
                    "#FF6ACE",
                    "#AE8CFF",
                    "#00689D",
                    "#00490A",
                    "#465D00",
                    "#9D6300",
                    "#F6540B",
                    "#FF969E",
                    "#E47BFE"
                ],
                "y2AxisLabelVisibility": "hide",
                "lineWidth": 4,
                "xAxisMajorTickVisibility": "show",
                "legendDisplay": "off",
                "yAxisTitleText": "Hour(s)",
                "nullValueDisplay": "zero",
                "seriesColorsByField": {
                    "uptime": "#53a051"
                },
                "backgroundColor": "transparent",
                "y2": "> primary | frameBySeriesNames('')",
                "overlayFields": []
            },
            "hideWhenNoData": true
        },
        "viz_P41pOzhZ": {
            "type": "splunk.line",
            "title": "CPU Usage % (Last 24 hours)",
            "dataSources": {
                "primary": "ds_XTPU6tFB"
            },
            "options": {
                "y": "> primary | frameBySeriesNames('cpu_usage')",
                "yAxisMajorTickVisibility": "show",
                "dataValuesDisplay": "minmax",
                "yAxisMin": 0,
                "yAxisMax": 100,
                "nullValueDisplay": "zero",
                "lineWidth": 4,
                "seriesColorsByField": {
                    "cpu": "#f8be34"
                },
                "legendDisplay": "off",
                "yAxisTitleVisibility": "hide",
                "backgroundColor": "transparent",
                "y2": "> primary | frameBySeriesNames('')",
                "seriesColors": [
                    "#53a051",
                    "#009CEB",
                    "#00CDAF",
                    "#DD9900",
                    "#FF677B",
                    "#CB2196",
                    "#813193",
                    "#0051B5",
                    "#008C80",
                    "#99B100",
                    "#FFA476",
                    "#FF6ACE",
                    "#AE8CFF",
                    "#00689D",
                    "#00490A",
                    "#465D00",
                    "#9D6300",
                    "#F6540B",
                    "#FF969E",
                    "#E47BFE"
                ]
            },
            "hideWhenNoData": true
        },
        "viz_1xPQ7Ovo": {
            "type": "splunk.line",
            "title": "RAM Usage %  (Last 24 hours)",
            "dataSources": {
                "primary": "ds_q3xphEwT"
            },
            "options": {
                "y": "> primary | frameBySeriesNames('ram_usage')",
                "dataValuesDisplay": "minmax",
                "yAxisMin": 0,
                "yAxisMax": 100,
                "nullValueDisplay": "zero",
                "legendDisplay": "off",
                "yAxisTitleVisibility": "hide",
                "lineWidth": 4,
                "seriesColorsByField": {
                    "memory": "#62b3b2"
                },
                "backgroundColor": "transparent",
                "y2": "> primary | frameBySeriesNames('')",
                "seriesColors": [
                    "#53a051",
                    "#009CEB",
                    "#00CDAF",
                    "#DD9900",
                    "#FF677B",
                    "#CB2196",
                    "#813193",
                    "#0051B5",
                    "#008C80",
                    "#99B100",
                    "#FFA476",
                    "#FF6ACE",
                    "#AE8CFF",
                    "#00689D",
                    "#00490A",
                    "#465D00",
                    "#9D6300",
                    "#F6540B",
                    "#FF969E",
                    "#E47BFE"
                ],
                "x": "> primary | seriesByName('_time')"
            },
            "hideWhenNoData": true
        },
        "viz_Kg6rQwOy": {
            "type": "splunk.line",
            "title": "Network Performance (Kbps)",
            "dataSources": {
                "primary": "ds_BYSSH2EI"
            },
            "options": {
                "y": "> primary | frameBySeriesNames('sent_kbps')",
                "showIndependentYRanges": true,
                "nullValueDisplay": "zero",
                "yAxisTitleText": "Sent Kbps",
                "y2AxisTitleText": "Sent Kbps",
                "showSplitSeries": true,
                "dataValuesDisplay": "minmax",
                "legendDisplay": "off",
                "yAxisScale": "log",
                "lineWidth": 4,
                "seriesColorsByField": {
                    "sent_kbps: network": "#0877a6"
                },
                "backgroundColor": "transparent",
                "x": "> primary | seriesByName('_time')",
                "y2": "> primary | frameBySeriesNames('sent_kbps: NULL')",
                "seriesColors": [
                    "#53a051",
                    "#009CEB",
                    "#00CDAF",
                    "#DD9900",
                    "#FF677B",
                    "#CB2196",
                    "#813193",
                    "#0051B5",
                    "#008C80",
                    "#99B100",
                    "#FFA476",
                    "#FF6ACE",
                    "#AE8CFF",
                    "#00689D",
                    "#00490A",
                    "#465D00",
                    "#9D6300",
                    "#F6540B",
                    "#FF969E",
                    "#E47BFE"
                ]
            },
            "hideWhenNoData": true
        },
        "viz_XIU4sk0d": {
            "type": "splunk.singlevalue",
            "dataSources": {
                "primary": "ds_vrb8NsHz"
            },
            "title": "Disk Usage %",
            "showProgressBar": false,
            "showLastUpdated": false,
            "options": {
                "unit": "%",
                "numberPrecision": 2,
                "backgroundColor": "> majorValue | rangeValue(backgroundColorEditorConfig)"
            },
            "context": {
                "backgroundColorEditorConfig": [
                    {
                        "value": "#118832",
                        "to": 60
                    },
                    {
                        "value": "#CBA700",
                        "from": 60,
                        "to": 80
                    },
                    {
                        "value": "#D41F1F",
                        "from": 80
                    }
                ]
            },
            "hideWhenNoData": true
        },
        "viz_cGfKQXyz": {
            "type": "splunk.singlevalue",
            "title": "Uptime (Hours)",
            "dataSources": {
                "primary": "ds_gX5YbCn5"
            },
            "options": {
                "unit": "h",
                "numberPrecision": 2,
                "trendFontSize": 1,
                "trendDisplay": "off",
                "sparklineDisplay": "off",
                "backgroundColor": "> majorValue | rangeValue(backgroundColorEditorConfig)",
                "majorValue": "> sparklineValues | lastPoint()",
                "trendValue": "> sparklineValues | delta(-2)",
                "sparklineValues": "> primary | seriesByName('Uptime_Hours')"
            },
            "context": {
                "backgroundColorEditorConfig": [
                    {
                        "value": "#118832",
                        "to": 4
                    },
                    {
                        "value": "#D41F1F",
                        "from": 4
                    }
                ]
            },
            "hideWhenNoData": true
        },
        "viz_WmeCjrnw": {
            "type": "splunk.line",
            "title": "Disk Usage %  (Last 24 hours)",
            "dataSources": {
                "primary": "ds_d52WuaxM"
            },
            "options": {
                "y": "> primary | frameBySeriesNames('disk_use')",
                "dataValuesDisplay": "minmax",
                "yAxisMin": 0,
                "yAxisMax": 100,
                "legendDisplay": "off",
                "yAxisTitleVisibility": "hide",
                "nullValueDisplay": "zero",
                "lineWidth": 4,
                "seriesColorsByField": {
                    "disk": "#CB2196"
                },
                "backgroundColor": "transparent",
                "seriesColors": [
                    "#53a051",
                    "#009CEB",
                    "#00CDAF",
                    "#DD9900",
                    "#FF677B",
                    "#CB2196",
                    "#813193",
                    "#0051B5",
                    "#008C80",
                    "#99B100",
                    "#FFA476",
                    "#FF6ACE",
                    "#AE8CFF",
                    "#00689D",
                    "#00490A",
                    "#465D00",
                    "#9D6300",
                    "#F6540B",
                    "#FF969E",
                    "#E47BFE"
                ]
            },
            "hideWhenNoData": true
        },
        "viz_sv0AMIQq": {
            "type": "splunk.line",
            "title": "",
            "dataSources": {
                "primary": "ds_9isHLx44"
            },
            "options": {
                "y": "> primary | frameBySeriesNames('received_kbps')",
                "showIndependentYRanges": true,
                "nullValueDisplay": "zero",
                "yAxisTitleText": "Received Kbps",
                "y2AxisTitleText": "Sent Kbps",
                "showSplitSeries": true,
                "dataValuesDisplay": "minmax",
                "backgroundColor": "transparent",
                "legendDisplay": "off",
                "yAxisScale": "log",
                "lineWidth": 4,
                "seriesColorsByField": {
                    "received_kbps: network": "#dc4e41"
                },
                "seriesColors": [
                    "#53a051",
                    "#009CEB",
                    "#00CDAF",
                    "#DD9900",
                    "#53a051",
                    "#CB2196",
                    "#813193",
                    "#0051B5",
                    "#008C80",
                    "#99B100",
                    "#FFA476",
                    "#FF6ACE",
                    "#AE8CFF",
                    "#00689D",
                    "#53a051",
                    "#465D00",
                    "#9D6300",
                    "#F6540B",
                    "#FF969E",
                    "#E47BFE"
                ]
            },
            "hideWhenNoData": true
        }
    },
    "inputs": {
        "input_global_trp": {
            "type": "input.timerange",
            "options": {
                "token": "global_time",
                "defaultValue": "-24h@h,now"
            },
            "title": "Global Time Range"
        },
        "input_2JKYWIGx": {
            "options": {
                "defaultValue": "Default Text",
                "token": "lab_ip"
            },
            "title": "Lab Priv IP",
            "type": "input.text"
        },
        "input_AOplVyPo": {
            "options": {
                "defaultValue": "Default Text",
                "token": "lab_os"
            },
            "title": "Lab OS",
            "type": "input.text"
        }
    },
    "layout": {
        "type": "grid",
        "options": {
            "width": 1440,
            "height": 960
        },
        "structure": [
            {
                "item": "viz_0KALIAzA",
                "type": "block",
                "position": {
                    "x": 0,
                    "y": 0,
                    "w": 223,
                    "h": 239
                }
            },
            {
                "item": "viz_cGfKQXyz",
                "type": "block",
                "position": {
                    "x": 0,
                    "y": 239,
                    "w": 223,
                    "h": 240
                }
            },
            {
                "item": "viz_P41pOzhZ",
                "type": "block",
                "position": {
                    "x": 0,
                    "y": 479,
                    "w": 455,
                    "h": 561
                }
            },
            {
                "item": "viz_XIU4sk0d",
                "type": "block",
                "position": {
                    "x": 223,
                    "y": 322,
                    "w": 232,
                    "h": 157
                }
            },
            {
                "item": "viz_RGYbhgOf",
                "type": "block",
                "position": {
                    "x": 223,
                    "y": 0,
                    "w": 232,
                    "h": 156
                }
            },
            {
                "item": "viz_mT2Y1GeM",
                "type": "block",
                "position": {
                    "x": 223,
                    "y": 156,
                    "w": 232,
                    "h": 166
                }
            },
            {
                "item": "viz_PFrx7mQd",
                "type": "block",
                "position": {
                    "x": 455,
                    "y": 0,
                    "w": 484,
                    "h": 479
                }
            },
            {
                "item": "viz_1xPQ7Ovo",
                "type": "block",
                "position": {
                    "x": 455,
                    "y": 479,
                    "w": 484,
                    "h": 561
                }
            },
            {
                "item": "viz_sv0AMIQq",
                "type": "block",
                "position": {
                    "x": 939,
                    "y": 243,
                    "w": 503,
                    "h": 236
                }
            },
            {
                "item": "viz_Kg6rQwOy",
                "type": "block",
                "position": {
                    "x": 939,
                    "y": 0,
                    "w": 503,
                    "h": 243
                }
            },
            {
                "item": "viz_WmeCjrnw",
                "type": "block",
                "position": {
                    "x": 939,
                    "y": 479,
                    "w": 502,
                    "h": 561
                }
            }
        ],
        "globalInputs": [
            "input_global_trp",
            "input_2JKYWIGx",
            "input_AOplVyPo"
        ]
    },
    "title": "Lab Analysis v2",
    "defaults": {
        "dataSources": {
            "ds.search": {
                "options": {
                    "queryParameters": {
                        "latest": "$global_time.latest$",
                        "earliest": "$global_time.earliest$"
                    }
                }
            }
        }
    },
    "description": ""
}